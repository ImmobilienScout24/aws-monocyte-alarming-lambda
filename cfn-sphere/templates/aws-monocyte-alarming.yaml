AWSTemplateFormatVersion: '2010-09-09'
Description: Monocyte Alarming Lambda
Parameters:
  bucketName:
    Description: aws-monocyte-alarming distrubtion bucket that contains the Lambda function zip file
    Type: String
  zipFile:
    Description: Name of the monocyte alarming distribution zip file inside the bucket
    Type: String
  config:
    Description: Config of the Monocyte Alarming
    Type: String
    Default: '{"sqs_queue":["queueName"],"sender_email":["sender-mail@domain.invalid"],"recipients":["recipients_mail@domain.invalid"],"usofa_key":["usofa s3 key file"],"region_name":["aws region string"],"usofa_bucket":["usofa s3 bucket name"]}'
  alarmNotificationAddress:
    Description: Mail address to send alarms to when monocyte alarming function did not run for a day
    Type: String
Resources:
  TriggerAlarmingFunctionRule:
    Type: "AWS::Events::Rule" 
    Properties:
      Description: "Event to trigger monocyte alarming function"
      ScheduleExpression: "cron(1 6 ? * MON-FRI *)"
      State: "ENABLED"
      Targets:
        - 
          Id: "1"
          Arn:
            Fn::GetAtt:
              - "monocyteAlarmingFunction"
              - "Arn"

  TriggerAlarmingFunctionRulePermission: 
    Type: "AWS::Lambda::Permission"
    Properties: 
      FunctionName: '|GetAtt|monocyteAlarmingFunction|Arn'
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: "|GetAtt|TriggerAlarmingFunctionRule|Arn"
 
  monocyteUpdateRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Sid: ''
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - "sqs:ReceiveMessage"
            - "sqs:DeleteMessage"
            - "sqs:GetQueueUrl"
            - "sqs:ChangeMessageVisibility"
            Effect: Allow
            Resource:
            - '*'
          Version: '2012-10-17'
        PolicyName: readQueue
      - PolicyDocument:
          Statement:
          - Action:
            - 'ses:SendEmail'
            Effect: Allow
            Resource:
            - 'arn:aws:ses:::*'
          Version: '2012-10-17'
        PolicyName: sendMail
      - PolicyDocument:
          Statement:
          - Action:
            - 's3:GetObject'
            Effect: Allow
            Resource:
            - 'arn:aws:s3:::*'
          Version: '2012-10-17'
        PolicyName: readS3
      - PolicyDocument:
          Statement:
          - Action:
            - 'logs:Describe*'
            - 'logs:CreateLogGroup'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: cloudwatchLogsWriteAccess
      - PolicyDocument:
          Statement:
          - Action:
            - 'lambda:GetFunctionConfiguration'
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: GetFunctionConfiguration
  monocyteAlarmingFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: bucketName
        S3Key:
          Ref: zipFile
      Description:
          Ref: config
      Handler: alarming_lambda.handler
      Role:
        Fn::GetAtt:
        - monocyteUpdateRole
        - Arn
      Runtime: python2.7
      Timeout: 15
  notificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      -
        Endpoint: '|Ref|alarmNotificationAddress'
        Protocol: email
  noInvokationsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
      - Ref: notificationTopic
      InsufficientDataActions:
      - Ref: notificationTopic
      AlarmDescription: 'Monocyte alarming has not been running!'
      ComparisonOperator: LessThanThreshold
      EvaluationPeriods: 1
      MetricName: Invocations
      Namespace: AWS/Lambda
      # Period is three quarters of a day in seconds.
      # CloudWatch waits for 4 evaluation periods before setting the alarm to INSUFFICIENT_DATA.
      # Monocyte does not run on the weekend (nobody could react to the alarm, anyway), so it is
      # normal for Monocyte to not have run for up to 3 days.
      Period: 64800
      Statistic: Sum
      Threshold: 1
      Dimensions:
      - Name: FunctionName
        Value: '|Ref|monocyteAlarmingFunction'
